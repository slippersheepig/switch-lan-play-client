name: upstream-watch

on:
  schedule:
    - cron: 8 6 * * *
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-upstream:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get upstream default branch and latest commit
        id: upstream
        uses: actions/github-script@v7
        with:
          script: |
            const owner = "spacemeowx2";
            const repo = "switch-lan-play";
            const repoInfo = await github.rest.repos.get({ owner, repo });
            const branch = repoInfo.data.default_branch;
            core.info(`Upstream default_branch: ${branch}`);
            const { data: commits } = await github.rest.repos.listCommits({
              owner, repo, per_page: 1, sha: branch
            });
            const sha = commits[0].sha;
            core.setOutput("branch", branch);
            core.setOutput("sha", sha);

      - name: Read last known upstream SHA (if any)
        id: last
        run: |
          FILE=.github/UPSTREAM_COMMIT
          if [[ -f "$FILE" ]]; then
            echo "last=$(cat $FILE)" >> $GITHUB_OUTPUT
          else
            echo "last=" >> $GITHUB_OUTPUT
          fi

      - name: Decide whether to update
        id: decide
        run: |
          if [[ "${{ steps.last.outputs.last }}" == "${{ steps.upstream.outputs.sha }}" ]]; then
            echo "changed=no" >> $GITHUB_OUTPUT
          else
            echo "changed=yes" >> $GITHUB_OUTPUT
          fi

      - name: Update SHA file and commit (triggers build)
        if: steps.decide.outputs.changed == 'yes'
        run: |
          mkdir -p .github
          echo "${{ steps.upstream.outputs.sha }}" > .github/UPSTREAM_COMMIT
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .github/UPSTREAM_COMMIT
          git commit -m "chore: bump upstream (${{ steps.upstream.outputs.branch }}) to ${{ steps.upstream.outputs.sha }}"
          git push
